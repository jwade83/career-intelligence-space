name: Agent CI

on:
  pull_request:
  push:
    branches: [main]

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install yq
        run: |
          # Try to install to $HOME/bin first, fallback to /usr/local/bin
          mkdir -p $HOME/bin
          curl -LO https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          if chmod +x yq_linux_amd64 && mv yq_linux_amd64 $HOME/bin/yq; then
            echo "$HOME/bin" >> $GITHUB_PATH
            echo "yq installed to $HOME/bin"
          else
            sudo install yq_linux_amd64 /usr/local/bin/yq
            rm -f yq_linux_amd64
            echo "yq installed to /usr/local/bin"
          fi

      - name: Validate YAML files with schema checks
        run: |
          error_count=0
          
          # Find and validate agent YAML files
          if find agents -name "*.yml" -print0 2>/dev/null | xargs -0 test -f 2>/dev/null; then
            find agents -name "*.yml" -print0 | xargs -0 -I {} bash -c '
              file="{}"
              # Basic YAML syntax validation
              if ! yq eval "." "$file" > /dev/null 2>&1; then
                echo "::error file=$file::Invalid YAML syntax"
                exit 1
              fi
              
              # Schema validation for agents
              if ! yq eval ".schema_version" "$file" > /dev/null 2>&1 || [ "$(yq eval ".schema_version" "$file")" = "null" ]; then
                echo "::error file=$file::Missing required field: schema_version"
                exit 1
              fi
              
              if ! yq eval ".definition_of_done" "$file" > /dev/null 2>&1 || [ "$(yq eval ".definition_of_done" "$file")" = "null" ]; then
                echo "::error file=$file::Missing required field: definition_of_done"
                exit 1
              fi
            ' || error_count=$((error_count + 1))
          fi
          
          # Find and validate task template YAML files
          if find tasks/templates -name "*.yml" -print0 2>/dev/null | xargs -0 test -f 2>/dev/null; then
            find tasks/templates -name "*.yml" -print0 | xargs -0 -I {} bash -c '
              file="{}"
              # Basic YAML syntax validation
              if ! yq eval "." "$file" > /dev/null 2>&1; then
                echo "::error file=$file::Invalid YAML syntax"
                exit 1
              fi
            ' || error_count=$((error_count + 1))
          fi
          
          # Find and validate queue YAML files
          if find tasks/queue -name "*.yml" -print0 2>/dev/null | xargs -0 test -f 2>/dev/null; then
            find tasks/queue -name "*.yml" -print0 | xargs -0 -I {} bash -c '
              file="{}"
              # Basic YAML syntax validation
              if ! yq eval "." "$file" > /dev/null 2>&1; then
                echo "::error file=$file::Invalid YAML syntax"
                exit 1
              fi
              
              # Schema validation for queued tasks
              for field in title priority status assigned_to due_date; do
                if ! yq eval ".$field" "$file" > /dev/null 2>&1 || [ "$(yq eval ".$field" "$file")" = "null" ]; then
                  echo "::error file=$file::Missing required field: $field"
                  exit 1
                fi
              done
            ' || error_count=$((error_count + 1))
          fi
          
          if [ $error_count -gt 0 ]; then
            if [ "$GITHUB_REF" = "refs/heads/main" ]; then
              echo "FAIL: $error_count YAML validation errors"
            fi
            exit 1
          else
            if [ "$GITHUB_REF" = "refs/heads/main" ]; then
              echo "PASS: All YAML files validated successfully"
            fi
          fi

      - name: Validate Markdown files with content checks
        run: |
          error_count=0
          
          # Find and validate markdown files using find with xargs
          if find docs -name "*.md" -print0 2>/dev/null | xargs -0 test -f 2>/dev/null; then
            find docs -name "*.md" -print0 | xargs -0 -I {} bash -c '
              file="{}"
              if [ ! -f "$file" ]; then
                echo "::error file=$file::File not found"
                exit 1
              elif [ ! -s "$file" ]; then
                echo "::error file=$file::File is empty"
                exit 1
              fi
              
              # Check for code blocks (basic markdown validation)
              if ! grep -q "^```" "$file" 2>/dev/null; then
                echo "::warning file=$file::No code blocks found - verify markdown formatting"
              fi
            ' || error_count=$((error_count + 1))
          fi
          
          if [ $error_count -gt 0 ]; then
            if [ "$GITHUB_REF" = "refs/heads/main" ]; then
              echo "FAIL: $error_count Markdown validation errors"
            fi
            exit 1
          else
            if [ "$GITHUB_REF" = "refs/heads/main" ]; then
              echo "PASS: All Markdown files validated successfully"
            fi
          fi

      - name: Report results (PR)
        if: github.event_name == 'pull_request'
        run: |
          if [ $? -eq 0 ]; then
            echo "✅ All validation checks passed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Validation Summary" >> $GITHUB_STEP_SUMMARY
            echo "- YAML schema validation: ✅ PASSED" >> $GITHUB_STEP_SUMMARY
            echo "- Markdown content validation: ✅ PASSED" >> $GITHUB_STEP_SUMMARY
            echo "- Agent requirements (.schema_version, .definition_of_done): ✅ PASSED" >> $GITHUB_STEP_SUMMARY
            echo "- Task queue requirements (.title, .priority, .status, .assigned_to, .due_date): ✅ PASSED" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Validation checks failed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Validation Summary" >> $GITHUB_STEP_SUMMARY
            echo "See workflow logs for detailed error information." >> $GITHUB_STEP_SUMMARY
          fi

      - name: Update weekly review (main)
        if: github.ref == 'refs/heads/main'
        run: |
          mkdir -p 99_LOGS
          echo "## $(date +'%Y-%m-%d %H:%M') - Agent CI Run" >> 99_LOGS/weekly_review.md
          if [ $? -eq 0 ]; then
            echo "✅ All validation checks passed" >> 99_LOGS/weekly_review.md
          else
            echo "❌ Validation checks failed" >> 99_LOGS/weekly_review.md
          fi
          echo "" >> 99_LOGS/weekly_review.md

      - name: Auto-commit weekly review
        if: github.ref == 'refs/heads/main'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add 99_LOGS/weekly_review.md
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Auto-update weekly review from CI"
            git push
          fi

# UPGRADE
