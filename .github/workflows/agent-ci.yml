name: Agent CI
on:
  pull_request:
  push:
    branches: [main]
jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install yq
        run: |
          # Try to install to $HOME/bin first, fallback to /usr/local/bin
          mkdir -p $HOME/bin
          curl -LO https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          if chmod +x yq_linux_amd64 && mv yq_linux_amd64 $HOME/bin/yq; then
            echo "$HOME/bin" >> $GITHUB_PATH
            echo "yq installed to $HOME/bin"
          else
            sudo install yq_linux_amd64 /usr/local/bin/yq
            rm -f yq_linux_amd64
            echo "yq installed to /usr/local/bin"
          fi
      - name: Validate YAML files with schema checks
        run: |
          error_count=0
          
          # Find and validate agent YAML files
          if find agents -name "*.yml" -print0 2>/dev/null | xargs -0 test -f 2>/dev/null; then
            for file in agents/*.yml; do
              # Basic YAML syntax validation
              if ! yq eval "." "$file" > /dev/null 2>&1; then
                echo "::error file=$file::Invalid YAML syntax"
                error_count=$((error_count + 1))
                continue
              fi
              
              # Schema validation for agents
              error_count=${error_count:-0}
              if ! yq e 'has("schema_version")' "$file" | grep -q true; then
                echo "::error file=$file::Missing schema_version"; error_count=$((error_count+1))
              fi
              if ! yq e 'has("definition_of_done") and (.definition_of_done | type == "!!seq")' "$file" | grep -q true; then
                echo "::error file=$file::Missing or invalid definition_of_done (must be YAML sequence)"; error_count=$((error_count+1))
              fi
            done
          fi
          
          # Find and validate task template YAML files
          if find tasks/templates -name "*.yml" -print0 2>/dev/null | xargs -0 test -f 2>/dev/null; then
            for file in tasks/templates/*.yml; do
              # Basic YAML syntax validation
              if ! yq eval "." "$file" > /dev/null 2>&1; then
                echo "::error file=$file::Invalid YAML syntax"
                error_count=$((error_count + 1))
              fi
            done
          fi
          
          # Find and validate queue YAML files with array guard
          if [ -d "tasks/queue" ]; then
            shopt -s nullglob
            queue_files=(tasks/queue/*.yml)
            if [ ${#queue_files[@]} -gt 0 ]; then
              for file in "${queue_files[@]}"; do
                # Basic YAML syntax validation
                if ! yq e 'true' "$file" >/dev/null 2>&1; then
                  echo "::error file=$file::Invalid YAML syntax"
                  error_count=$((error_count+1))
                  continue
                fi
              done
            fi
          fi
          
          if [ "$error_count" -gt 0 ]; then exit 1; fi
