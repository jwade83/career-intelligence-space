name: PR Babysitter

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: pr-babysitter-${{ github.ref }}
  cancel-in-progress: true

jobs:
  attach-required-checks:
    name: Attach Required Checks
    runs-on: ubuntu-latest
    # run for PR events (not bot accounts) or manual dispatch
    if: ${{ (github.event_name == 'pull_request' && github.actor != 'github-actions[bot]' && github.actor != 'dependabot[bot]') || github.event_name == 'workflow_dispatch' }}

    steps:
      - name: Resolve PR context
        id: ctx
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "sha=${{ github.event.pull_request.head.sha }}" >> "$GITHUB_OUTPUT"
            echo "pr=${{ github.event.pull_request.number }}"   >> "$GITHUB_OUTPUT"
          else
            echo "sha=${{ github.sha }}" >> "$GITHUB_OUTPUT"
            echo "pr=manual" >> "$GITHUB_OUTPUT"
          fi

      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.ref || github.ref }}
          fetch-depth: 0

      - name: Wait briefly for checks to appear
        run: sleep 2

      - name: Check statuses for required contexts
        id: probe
        env:
          REPO: ${{ github.repository }}
          SHA: ${{ steps.ctx.outputs.sha }}
          GH_TOKEN: ${{ github.token }}
        run: |
          set -euo pipefail
          STATUS_JSON=$(curl -fsSL \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/$REPO/commits/$SHA/status")
          
          STATES=$(echo "$STATUS_JSON" | jq -r '[.statuses[]? | select(.context=="links" or .context=="gate") | .state] | join(",")')
          echo "states=$STATES" >> "$GITHUB_OUTPUT"
          echo "Found states: $STATES"

      - name: Log missing contexts (monitoring only)
        if: ${{ steps.probe.outputs.states == '' || steps.probe.outputs.states == 'pending' }}
        run: |
          echo "⚠️  Required contexts missing: ${{ steps.probe.outputs.states }}"
          echo "ℹ️  This is expected behavior - babysitter monitors only"
          echo "ℹ️  No automatic fixes applied to prevent commit loops"